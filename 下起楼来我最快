/*
小赛是一名机智的程序员，他的机智主要表现在他下楼的速度特别快( > c < )。
小赛的家住在第n层，他可以选择从电梯下楼（假设只有小赛一个人会用电梯）或者走楼梯下楼。
当前电梯停在第m层，如果他从电梯下到第1层，需要：电梯先到达这一层->开门->关门->电梯再到达第一层->开门（最后的开门时间也要计算在内）。
现在告诉你——
小赛的家在楼层n，当前电梯停在的楼层m，
以及电梯每经过一层楼的时间t1，开门时间t2，关门时间t3，还有小赛每下一层楼的时间t4，
让你帮小赛计算一下，他最快到达第1层的时间。
输入
第一行两个整数n，m，其中n表示小赛家在的楼层，m表示当前电梯停在的楼层，
第二行四个整数，t1，t2，t3，t4，其中t1表示电梯每经过一层楼的时间，t2表示开门时间，t3表示关门时间，t4表示小赛每下一层楼的时间。
数据保证——
对于80%的测试点，1<=n,m<=10，1<=t1,t2,t3,t4<=100
对于100%的测试点，1<=n,m<=100000，1<=t1,t2,t3,t4<=100000
输出
输出一行，含有一个整数，表示小赛最快到达第1层的时间。
*/
#include<stdio.h>

int main(void) {
	long long n, m, t1, t2, t3, t4;
    long long time1;                        //坐电梯所需要的时间
    long long time2;                        //走楼梯所需要的时间
	int distance;                       	//用于存放小赛和电梯之间差的楼层数 
	
	scanf("%d%d", &n, &m);
	scanf("%d%d%d%d", &t1, &t2, &t3, &t4);
	
	distance = (n < m) ? (m - n) : (n - m);
	
	time1 = distance * t1 + t2 + t3 + (n - 1) * t1 + t2;
	time2 = t4 * (n - 1);
	
	printf("%lld", (time1 < time2) ? time1 : time2);
	
	return 0;
}
