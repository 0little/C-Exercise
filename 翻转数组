/*
给定一个长度为n的整数数组a，元素均不相同，问数组是否存在这样一个片段，只将该片段翻转就可以使整个数组
升序排列。其中数组片段[l,r]表示序列a[l], a[l+1],?...,?a[r]。原始数组为
a[1], a[2], ..., a[l-2], a[l-1], a[l], a[l+1], ..., a[r-1], a[r], a[r+1], a[r+2], ..., a[n-1], a[n]，
将片段[l,r]反序后的数组是
a[1], a[2], ..., a[l-2], a[l-1], a[r], a[r-1], ..., a[l+1], a[l], a[r+1], a[r+2], ..., a[n-1], a[n]。
输入
第一行数据是一个整数：n (1≤n≤10^5)，表示数组长度。
第二行数据是n个整数a[1], a[2], ..., a[n] (1≤a[i]≤10^9)。
输出
输出“yes”，如果存在；否则输出“no”，不用输出引号。
*/

#include<stdio.h>

int main(void) {
	int n;               //数组长度
	int a[n];
	int i, j;		     //记录数组下标 
	int flag1 = 0;       //用于标识元素开始降序排列时前面是否有元素
	int flag2 = 0;       //用于标识元素结束降序排列时后面是否有元素
	int head;
	int tail;
	
	scanf("%d", &n);
	for(i = 0; i < n; i++) {
		scanf("%d", &a[i]);
	}
	
	for(i = 0; i < n-1; i++) {
		if(a[i] > a[i+1]) {
			break;
		}
	}
	
	if(i == n-1) {
		printf("no");
		return 0;
	}
	
	if(i != 0) {
		flag1 = 1;
		head = a[i-1];
	} 
	
	for(j = i+1; j < n-1; j++) {
		if(a[j] < a[j+1]) {
			break;
		}
	}
	
	if(j != n-1) {
		flag2 = 1;
		tail = a[j+1];
	}
	
	if(flag2 == 0) {
		if(flag1 != 0 && a[j] < head) {
			printf("no");
		} else {
			printf("yes");
		}
		return 0;
	} else {
		if(a[i] > tail) {
			printf("no");
			return 0;
		} 
		if(flag1 != 0 && a[j] < head) {
			printf("no");
			return 0;
		}
		for(i = j+1; i< n-1; i++) {
			if(a[i] > a[i+1]) {
				printf("no");
				return 0;
			}
		}
	}

	printf("yes"); 
	 
	return 0;
}
