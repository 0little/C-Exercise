/*
小易有一些彩色的砖块。每种颜色由一个大写字母表示。各个颜色砖块看起来都完全一样。
现在有一个给定的字符串s,s中每个字符代表小易的某个砖块的颜色。小易想把他所有的砖
块排成一行。如果最多存在一对不同颜色的相邻砖块,那么这行砖块就很漂亮的。请你帮助
小易计算有多少种方式将他所有砖块排成漂亮的一行。(如果两种方式所对应的砖块颜色序
列是相同的,那么认为这两种方式是一样的。)
例如: s = "ABAB",那么小易有六种排列的结果:
"AABB","ABAB","ABBA","BAAB","BABA","BBAA"
其中只有"AABB"和"BBAA"满足最多只有一对不同颜色的相邻砖块。
输入描述:
输入包括一个字符串s,字符串s的长度length(1 ≤ length ≤ 50),s中的每一个字符都为一个大写字母(A到Z)。 
输出描述:
输出一个整数,表示小易可以有多少种方式。
*/
#include<stdio.h>
#include<string.h>

int main(void) {
	char s[51] = {0};
	int length = 0;
	int count = 0; //记录出现的字符种类
	char first; //出现的第一种字符 
	char second; //出现的第二种字符 
	int result = 1;
	
	gets(s);
	while(s[length] != 0) {
		if(count == 0) {
			first = s[length];
			count++;
		} else if(count == 1 && s[length] != first) {
			second = s[length];
			count++;
		} else if(count == 2 && s[length] != first && s[length] != second) {
			result = 0;
			break;
		}	
		length++; 
	}
	
	if(result != 0 && count == 2) {
		result = 2;
	}
	
	printf("%d\n", result);
	
	return 0;
}
