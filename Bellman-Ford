/*Bellman-Ford——解决负权边*/
#include<stdio.h>

int main(void) {
	//dis数组用于存储一号顶点到各个顶点的最短距离
	//n表示顶点个数，m表示边数
	//u数组存储开始顶点，v数组存储结束顶点，w数组存储两顶点间的距离 
	int dis[10], i, k, n, m, u[10], v[10], w[10];
	int inf = 99999999;  //存储一个我们认为的无穷值
	//读入n和m
	scanf("%d%d", &n, &m);
	
	//读入边
	for(i = 1; i <= m; i++) {
		scanf("%d%d%d", &u[i], &v[i], &w[i]);
	} 
	
	//初始化dis数组，这里是一号顶点到各顶点的初始路程
	for(i = 1; i <= n; i++) {
		dis[i] = inf;
	} 
	
	dis[1] = 0;
	
	//Bellman-Ford算法核心语句
	for(k = 1; k <= n-1; k++) {
		for(i = 1; i <= m; i++) {
			if(dis[v[i]] > dis[u[i]] + w[i]) {
				dis[v[i]] = dis[u[i]] + w[i];
			}
		}
	} 
	
	//输出最终结果
	for(i = 1; i <= n; i++) {
		printf("%d ", dis[i]);
	}
	 
	return 0; 
} 
