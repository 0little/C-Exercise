/*
某国进行军事演戏，研发一种导弹拦截系统。但是这种导弹拦截系统有一个缺陷：虽然它的第一发炮弹能够到达任意的高度，
但是以后每一发炮弹都不能高于等于前一发的高度。某天，雷达捕捉到敌国导弹来袭。由于该系统还在试用阶段，所以只用
一套系统，因此有可能不能拦截所有的导弹。请你帮忙选择一套系统，根据测试的导弹数量和每次导弹飞来的高度，计算出
最多能拦截导弹的数目。
输入：第一行输入测试数据组数N（1<=N<=10）
接下来一行输入这组测试数据共有多少个导弹m（1<=m<=20）
接下来行输入导弹依次飞来的高度，所有高度值均是大于0的正整数。
输出：输出最多能拦截的导弹数目 
*/

#include<stdio.h>

#define N 10                     //最多数据组数 
#define NUM 20                   //每组最多导弹个数 

int main(void) {
	int result = 1;				//最少可以拦截一个导弹 
	int height[NUM] = {0};      //一个存储各导弹高度的数组 
	int next[NUM] = {0};        //该数组用于记录：该高度之前（包括它自己）有几个高度依次大于它 
	int n;                      //数据组数
	int m;                      //导弹个数 
	int i;                      //记录测试数据组数变化 
	int j;						//记录height下标变化
	int k;						//记录next下标变化 
	
	scanf("%d", &n);
	
	for(i = 0; i <n; i++) {
		scanf("%d", &m);
		for(j = 0; j < m; j++) {
			scanf("%d", &height[j]);
			next[j] = 1;        //next数组各元素初值均为1，因为最少可以拦截一个导弹 
		}
		
		for(j = 1; j < m; j++) {
			for(k = 0; k < j; k++) {
				if(height[j] < height[k]) {
					/*下标为k的导弹之前共有共有next[k]个导弹依次大于它，且height[j] < height[k], 
					所以下标小于等于k的高度中有next[k]个高度<height[j],再加上height[j]本身，此时的
					next[j]就应该等于next[k]+1*/
					next[j] = next[k] + 1;    
				}
			}
		}
		
		for(j = 0; j < NUM; j++) 
			if(next[j] > result) 
				result = next[j];		
	}
	 
	printf("%d", result);
	
	return 0;
} 
